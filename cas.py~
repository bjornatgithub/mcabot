import RPi.GPIO as GPIO
import time

TIME_IMPULS=0.00001
TIME_SETTLE=0.5
SOUND_CM_S=34326
COLLISION_DIST=30

IO_TRIG=17
IO_ECHO=18

class Cas(object):
    'Collision avoidance system'

    def __init__(self):
        GPIO.setup(IO_TRIG, GPIO.OUT)
        GPIO.setup(IO_ECHO, GPIO.IN)

        #let Distance Sensor settle
        GPIO.output(IO_TRIG, GPIO.LOW)
        self._settlestart = time.time()
        time.sleep(TIME_SETTLE)

    def update(self):
        settlestop = time.time()

        if (settlestop - self._settlestart) > TIME_SETTLE:
            # send echo impuls
            GPIO.output(IO_TRIG, GPIO.HIGH)
            time.sleep(TIME_IMPULS)
            GPIO.output(IO_TRIG, GPIO.LOW)

            start = time.time()

            while GPIO.input(IO_ECHO) == 0:
                start = time.time()

            while GPIO.input(IO_ECHO) == 1:
                stop = time.time()

                if stop - start >= 0.04:
                    stop = start
                    print ("cas: obstacle to close")
                    break

                elapsed = stop - start
                self._distance = (elapsed * SOUND_CM_S) / 2


            self._settlestart = time.time()


    def get_distance(self):
        return self._distance

    def is_collision_alert(self):
        if self._distance < COLLISION_DIST:
            return True
        else:
            return False
